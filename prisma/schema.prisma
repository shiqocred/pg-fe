// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id       String @id @default(cuid())
  username Int
  password String

  branches  Branch?
  posts     Post[]
  caegories Category[]
  videos    Video[]
  roundowns Roundown[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()
}

enum CabangRole {
  ALL
  PUTRA1
  PUTRA3
  PUTRA4
  PUTRA5
  PUTRA6
  PUTRA7
  PUTRI1
  PUTRI2
  PUTRI3
  PUTRI4
  PUTRI7
}

model Branch {
  id     String     @id @default(cuid())
  cabang CabangRole

  profileId String  @unique
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  posts     Post[]
  videos    Video[]
  roundowns Roundown[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  @@index([profileId])
}

model Category {
  id   String @id @default(cuid())
  name String

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  posts  Post[]
  videos Video[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  @@index([profileId])
}

model Post {
  id        String @id @default(cuid())
  title     String
  highlight String @db.Text
  article   String @db.Text
  imageUrl  String @db.Text
  author    String

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  branchId String
  branch   Branch @relation(fields: [branchId], references: [id], onDelete: Cascade)

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  @@index([profileId])
  @@index([branchId])
  @@index([categoryId])
}

model Video {
  id          String @id @default(cuid())
  title       String
  description String @db.Text
  videoUrl    String @db.Text
  thumnailUrl String @db.Text

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  branchId String
  branch   Branch @relation(fields: [branchId], references: [id], onDelete: Cascade)

  categoryId String
  category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  @@index([profileId])
  @@index([branchId])
  @@index([categoryId])
}

model Roundown {
  id         String @id @default(cuid())
  appearance String

  profileId String
  profile   Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  branchId String
  branch   Branch @relation(fields: [branchId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  @@index([profileId])
  @@index([branchId])
}
